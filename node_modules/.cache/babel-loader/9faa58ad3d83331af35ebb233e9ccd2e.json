{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jennifertwist/server/html/2020-sept-DreamTeamSocial-ui/src/components/profile/profile.js\";\nimport React, { Component } from 'react';\nimport '../../App.css';\nimport { Redirect } from 'react-router-dom';\nimport { NavBar } from \"../navbar\";\nimport { Branding } from \"../branding\";\nimport { UserInfo } from \"../userInfo\";\nimport axios from \"axios\";\nimport './profile.css';\nimport Header from \"../header\";\nimport TextareaInput from \"../textareaInput\";\nimport Button from \"../button\";\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.checkLoginStatus = async () => {\n      return axios({\n        method: \"GET\",\n        withCredentials: true,\n        url: \"http://localhost:3001/user/loggedIn\"\n      }).then(response => {\n        return response.data;\n      }).catch(err => {\n        this.props.history.push('/');\n      });\n    };\n\n    this.getUserProfile = username => {\n      axios({\n        method: \"GET\",\n        withCredentials: true,\n        url: \"http://localhost:3001/user/\" + username\n      }).then(response => {\n        if (response.data.success) {\n          this.setState({\n            UserProfile: response.data.info\n          });\n        } else {\n          this.setState({\n            UserProfile: {\n              username: 'error could not find user',\n              bio: ''\n            }\n          });\n        }\n      }).catch(err => {\n        this.props.history.push('/profile/' + this.state.loggedInUser);\n      });\n    };\n\n    this.getTilPosts = async () => {\n      return axios({\n        method: \"GET\",\n        withCredentials: true,\n        url: \"http://localhost:3001/til/\" + this.state.url\n      }).then(response => {\n        if (response.data.success) {\n          this.setState({\n            userTils: response.data.info\n          });\n        } else {\n          this.setState({\n            userTils: 'Nothing to see here'\n          });\n        }\n      }).catch(err => {\n        this.setState({\n          databaseError: 'Sorry your TILs were not retrieved.'\n        });\n      });\n    };\n\n    this.handleChange = event => {\n      event.preventDefault();\n      const value = event.target.value;\n      this.setState({\n        tilPost: value\n      });\n      console.log(this.state.tilPost);\n    };\n\n    this.sendNewTIL = async event => {\n      event.preventDefault();\n      axios({\n        method: \"POST\",\n        data: {\n          username: this.state.loggedInUser,\n          tilPost: this.state.tilPost\n        },\n        withCredentials: true,\n        url: \"http://localhost:3001/til\"\n      }).then(response => {\n        if (response.data.success) {\n          this.setState({\n            tilPost: '',\n            databaseError: ''\n          });\n          event.target.reset();\n          this.getTilPosts();\n        } else {\n          this.setState({\n            databaseError: 'Sorry your TIL wasn\\'t submitted, try again later.'\n          });\n        }\n      }).catch(err => {\n        this.setState({\n          databaseError: 'Sorry your TIL wasn\\'t submitted, try again later.'\n        });\n      });\n    };\n\n    this.state = {\n      url: props.match.params.user,\n      loggedInUser: false,\n      tilPost: '',\n      userTils: [],\n      UserProfile: {\n        username: '',\n        bio: ''\n      },\n      loggedInUserProfile: false,\n      responsedata: false,\n      databaseError: ''\n    };\n  }\n\n  async componentDidMount() {\n    console.log('profile CDM');\n    const response = await this.checkLoginStatus();\n\n    if (response.success) {\n      console.log('profile CDM inside If');\n      console.log(this.state.url);\n      this.setState({\n        loggedInUser: response.info.username,\n        responsedata: true\n      });\n      this.getUserProfile(this.state.url);\n      await this.getTilPosts();\n\n      if (this.state.loggedInUser === this.state.url) {\n        this.setState({\n          loggedInUserProfile: true\n        });\n      } else {\n        this.setState({\n          loggedInUserProfile: false\n        });\n      }\n    } else {\n      this.props.history.push('/');\n    }\n  }\n\n  followButton() {// if(!this.state.loggedInUserProfile) {\n    //     return <p>Follow</p>\n    // } button not needed yet\n  }\n\n  addTILForm() {\n    if (this.state.loggedInUserProfile) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"til_form\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"til_form_enter\",\n          onSubmit: this.sendNewTIL,\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            title: \"Add A New Thing I Learned:\",\n            className: \"til_header\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"form_wrapper\",\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"form_row\",\n              children: /*#__PURE__*/_jsxDEV(TextareaInput, {\n                className: \"TIL_textarea\",\n                rows: \"3\",\n                name: \"New TIL\",\n                placeholder: \"What did you learn today?\",\n                handleChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this), this.databaseErrorMessage(), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Max 255 characters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            name: \"Add TIL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Placeholder for follow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n  formatDate(date) {\n    const splitTimestamp = date.split(/[T.]/);\n    const dateOfTil = splitTimestamp[0];\n    let timeOfTil = splitTimestamp[1];\n    timeOfTil = timeOfTil.substring(0, timeOfTil.length - 3);\n    return dateOfTil + ' at ' + timeOfTil;\n  }\n\n  displayTILs() {\n    const userTils = this.state.userTils;\n    userTils.reverse();\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: userTils.map((post, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"til_form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex_til_titles\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Posted by: \", post.username, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 56\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Posted at: \", this.formatDate(post.createdAt)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"til_post_content\",\n          children: post.tilPost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }, this))\n    }, void 0, false);\n  }\n\n  databaseErrorMessage() {\n    if (this.state.databaseError) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: this.state.databaseError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n  render() {\n    if (this.state.responsedata) {\n      if (this.state.loggedInUser) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-fluid px-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row top_bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm-12 col-md-12 col-xl-12 branding\",\n              children: /*#__PURE__*/_jsxDEV(Branding, {\n                className: \"img\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 34\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row page_content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm-12 col-md-3 user_info\",\n              children: [/*#__PURE__*/_jsxDEV(NavBar, {\n                currentUser: this.state.loggedInUser\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(UserInfo, {\n                bio: this.state.UserProfile.bio,\n                username: this.state.UserProfile.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm-12 col-md-9 til_container\",\n              children: [this.addTILForm(), /*#__PURE__*/_jsxDEV(Header, {\n                className: \"timeline_header\",\n                title: \"My TILs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 37\n              }, this), this.displayTILs()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 25\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 25\n        }, this);\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 22\n      }, this); // add loading gif if we get to it but this is barely noticable anyway\n    }\n  }\n\n}\n\nexport default Profile;","map":{"version":3,"sources":["/Users/jennifertwist/server/html/2020-sept-DreamTeamSocial-ui/src/components/profile/profile.js"],"names":["React","Component","Redirect","NavBar","Branding","UserInfo","axios","Header","TextareaInput","Button","Profile","constructor","props","checkLoginStatus","method","withCredentials","url","then","response","data","catch","err","history","push","getUserProfile","username","success","setState","UserProfile","info","bio","state","loggedInUser","getTilPosts","userTils","databaseError","handleChange","event","preventDefault","value","target","tilPost","console","log","sendNewTIL","reset","match","params","user","loggedInUserProfile","responsedata","componentDidMount","followButton","addTILForm","databaseErrorMessage","formatDate","date","splitTimestamp","split","dateOfTil","timeOfTil","substring","length","displayTILs","reverse","map","post","i","createdAt","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../../App.css';\nimport {Redirect} from 'react-router-dom';\nimport {NavBar} from \"../navbar\";\nimport {Branding} from \"../branding\";\nimport {UserInfo} from \"../userInfo\";\nimport axios from \"axios\";\nimport './profile.css';\nimport Header from \"../header\";\nimport TextareaInput from \"../textareaInput\";\nimport Button from \"../button\";\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {url: props.match.params.user,\n                    loggedInUser: false,\n                    tilPost: '',\n                    userTils: [],\n                    UserProfile: {\n                        username: '',\n                        bio: ''\n                    },\n                    loggedInUserProfile: false,\n                    responsedata: false,\n                    databaseError: ''\n                };\n    }\n\n    checkLoginStatus = async () => {\n        return axios({\n            method: \"GET\",\n            withCredentials: true,\n            url: \"http://localhost:3001/user/loggedIn\"\n        }).then( response => {\n            return response.data\n        }).catch( err => {\n            this.props.history.push('/');\n        })\n    }\n\n    getUserProfile = (username) => {\n        axios({\n            method: \"GET\",\n            withCredentials: true,\n            url: \"http://localhost:3001/user/\" + username\n        }).then( response => {\n            if (response.data.success) {\n                this.setState({UserProfile: response.data.info})\n            } else {\n                this.setState({UserProfile: {username: 'error could not find user', bio: ''}})\n            }\n        }).catch( err => {\n            this.props.history.push('/profile/' + this.state.loggedInUser);\n        })\n    }\n\n    async componentDidMount() {\n        console.log('profile CDM')\n        const response =  await this.checkLoginStatus();\n        if (response.success) {\n            console.log('profile CDM inside If')\n            console.log(this.state.url)\n            this.setState({loggedInUser: response.info.username, responsedata: true});\n            this.getUserProfile(this.state.url)\n            await this.getTilPosts()\n            if (this.state.loggedInUser === this.state.url) {\n                this.setState({loggedInUserProfile: true})\n            } else {\n                this.setState({loggedInUserProfile: false})\n            }\n        } else {\n            this.props.history.push('/');\n        }\n    }\n\n    followButton() {\n        // if(!this.state.loggedInUserProfile) {\n        //     return <p>Follow</p>\n        // } button not needed yet\n    }\n\n    addTILForm() {\n        if (this.state.loggedInUserProfile) {\n            return <div className=\"til_form\">\n            <form className=\"til_form_enter\" onSubmit={this.sendNewTIL} >\n                <Header title=\"Add A New Thing I Learned:\" className=\"til_header\"/>\n                <ul className=\"form_wrapper\">\n                    <li className=\"form_row\">\n                        <TextareaInput className=\"TIL_textarea\" rows=\"3\" name=\"New TIL\"\n                                       placeholder=\"What did you learn today?\" handleChange={this.handleChange}/>\n                    </li>\n                </ul>\n                {this.databaseErrorMessage()}\n                <p>Max 255 characters</p>\n                <Button name=\"Add TIL\"/>\n            </form>\n            </div>\n        } else {\n            return <h1>Placeholder for follow</h1>\n        }\n    }\n\n    getTilPosts = async () => {\n        return axios({\n            method: \"GET\",\n            withCredentials: true,\n            url: \"http://localhost:3001/til/\" + this.state.url\n        }).then( response => {\n            if(response.data.success){\n                this.setState({userTils: response.data.info})\n            } else {\n                this.setState({userTils: 'Nothing to see here'})\n            }\n        }).catch( err => {\n            this.setState({databaseError: 'Sorry your TILs were not retrieved.'})\n        })\n    }\n\n    formatDate(date) {\n       const splitTimestamp = date.split(/[T.]/);\n       const dateOfTil = splitTimestamp[0];\n       let timeOfTil = splitTimestamp[1];\n       timeOfTil = timeOfTil.substring(0, timeOfTil.length-3)\n       return dateOfTil + ' at ' + timeOfTil\n    }\n\n    displayTILs() {\n        const userTils = this.state.userTils;\n        userTils.reverse()\n        return (\n            <>\n                {userTils.map((post,i) => (\n                    <div key={i} className=\"til_form\">\n                      <div className=\"flex_til_titles\"><p>Posted by: {post.username} </p>\n                          <p>Posted at: {this.formatDate(post.createdAt)}</p>\n                      </div>\n                        <p className=\"til_post_content\">{post.tilPost}</p>\n                    </div>)\n                )}\n            </>\n       )\n    }\n\n    handleChange = (event) => {\n        event.preventDefault();\n        const value = event.target.value;\n        this.setState({tilPost: value})\n        console.log(this.state.tilPost)\n    }\n\n    databaseErrorMessage() {\n        if(this.state.databaseError) {\n            return <p className='error'>{this.state.databaseError}</p>\n        }\n    }\n\n    sendNewTIL = async (event) => {\n        event.preventDefault();\n            axios({\n            method: \"POST\",\n            data: {username: this.state.loggedInUser, tilPost: this.state.tilPost},\n            withCredentials: true,\n            url: \"http://localhost:3001/til\"\n        }).then( response => {\n            if(response.data.success){\n                this.setState({tilPost: '', databaseError: ''})\n                event.target.reset()\n                this.getTilPosts()\n            } else {\n                this.setState({databaseError: 'Sorry your TIL wasn\\'t submitted, try again later.'})\n            }\n        }).catch( err => {\n            this.setState({databaseError: 'Sorry your TIL wasn\\'t submitted, try again later.'})\n        })\n    }\n\n    render() {\n\n        if (this.state.responsedata)\n            if (this.state.loggedInUser) {\n                    return (\n                        <div className=\"container-fluid px-0\">\n                            <div className=\"row top_bar\">\n                                <div className=\"col-sm-12 col-md-12 col-xl-12 branding\">\n                                 <Branding className=\"img\"/>\n                                </div>\n                            </div>\n                            <div className=\"row page_content\">\n                                <div className=\"col-sm-12 col-md-3 user_info\">\n                                    <NavBar currentUser={this.state.loggedInUser} />\n                                    <UserInfo bio={this.state.UserProfile.bio} username={this.state.UserProfile.username}/>\n                                </div>\n                                <div className=\"col-sm-12 col-md-9 til_container\">\n                                    {this.addTILForm()}\n                                    <Header className=\"timeline_header\" title=\"My TILs\" />\n                                    {this.displayTILs()}\n                                </div>\n                            </div>\n                        </div>\n                    )\n            } else {\n                return (<Redirect to='/'/>)\n            }\n        else {\n            return ( <div>Loading</div>) // add loading gif if we get to it but this is barely noticable anyway\n        }\n    }\n}\n\nexport default Profile;"]},"metadata":{},"sourceType":"module"}