{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jennifertwist/server/html/2020-sept-DreamTeamSocial-ui/src/components/register/register.js\";\nimport React, { Component } from 'react';\nimport './register.css';\nimport { Link, Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Button from \"../button\";\nimport Header from \"../header\";\nimport Label from \"../label\";\nimport Input from \"../input\";\nimport TextareaInput from \"../textareaInput\";\nconst validUsernameRegex = RegExp(/^[a-zA-Z0-9-_]{8,20}$/);\nconst validEmailRegex = RegExp(/^(([^<>()\\[\\].,;:\\s@\"]+(\\.[^<>()\\[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i);\nconst validPasswordRegex = RegExp(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/);\n\nconst validateForm = errors => {\n  let valid = true;\n  Object.values(errors).forEach( // if we have an error string set valid to false\n  val => val.length > 0 && (valid = false));\n  return valid;\n};\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.checkLoginStatus = async () => {\n      return axios({\n        method: \"GET\",\n        withCredentials: true,\n        url: \"http://localhost:3001/user/loggedIn\"\n      }).then(response => {\n        return response.data;\n      }).catch(err => {\n        this.setState({\n          databaseError: true,\n          databaseMessage: \"Couldn't connect to database\"\n        });\n      });\n    };\n\n    this.handleChange = event => {\n      event.preventDefault();\n      const {\n        name,\n        value\n      } = event.target;\n      let errors = this.state.errors;\n\n      switch (name) {\n        case 'username':\n          errors.username = validUsernameRegex.test(value) ? '' : 'Username must be 8-20 characters long with no spaces! Letters, underscores and numbers allowed.';\n          break;\n\n        case 'email':\n          errors.email = validEmailRegex.test(value) ? '' : 'Email is not valid!';\n          break;\n\n        case 'password':\n          errors.password = validPasswordRegex.test(value) ? '' : 'Password must be at least 8 characters long, with at least 1 uppercase letter, 1 lower case, 1 special character & 1 number.';\n          break;\n\n        case 'bio':\n          errors.bio = value.length > 500 ? 'Bio must be less than 500 characters long!' : '';\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        errors,\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n\n      if (validateForm(this.state.errors)) {\n        const {\n          username,\n          password,\n          email,\n          bio\n        } = this.state;\n        axios({\n          method: \"POST\",\n          data: {\n            username: username,\n            password: password,\n            email: email,\n            bio: bio\n          },\n          withCredentials: true,\n          url: \"http://localhost:3001/user\"\n        }).then(response => {\n          if (!response.data.success) {\n            //Handle if registration fails\n            this.setState({\n              databaseError: true,\n              databaseMessage: response.data.message\n            });\n          } else {\n            axios({\n              method: \"POST\",\n              data: {\n                username: username,\n                password: password\n              },\n              withCredentials: true,\n              url: \"http://localhost:3001/user/login\"\n            }).then(response => {\n              if (response.data.success) {\n                this.props.history.push('/profile/' + username);\n              } else {\n                this.props.history.push('/');\n              }\n            });\n          }\n        }).catch(error => {\n          //sorry or servers are down please try again later\n          console.log(error);\n        });\n      } else {\n        console.error('Invalid Form');\n      }\n    };\n\n    this.state = {\n      username: null,\n      email: null,\n      password: null,\n      bio: null,\n      loggedInUser: false,\n      databaseError: false,\n      databaseMessage: '',\n      errors: {\n        username: '',\n        email: '',\n        password: '',\n        bio: ''\n      }\n    };\n  }\n\n  async componentDidMount() {\n    const response = await this.checkLoginStatus();\n\n    if (response.success) {\n      this.setState({\n        loggedInUser: response.info.username\n      });\n    } else {\n      this.setState({\n        loggedInUser: false\n      });\n    }\n  }\n\n  databaseErrorMessage() {\n    if (this.state.databaseError) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: this.state.databaseMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n\n    if (this.state.loggedInUser) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: '/profile/' + this.state.loggedInUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo_box\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"TILTime-logo.png\",\n            alt: \"Logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"link_button\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                name: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Header, {\n              title: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"form_wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"form_row\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  title: \"Choose Username: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"text\",\n                  name: \"username\",\n                  handleChange: this.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 33\n              }, this), errors.username.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error requirement_username\",\n                children: errors.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"form_row\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  title: \"Email: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"text\",\n                  name: \"email\",\n                  handleChange: this.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 33\n              }, this), errors.email.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error requirement_email\",\n                children: errors.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"form_row\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  title: \"Password: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  name: \"password\",\n                  onChange: this.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 33\n              }, this), errors.password.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error requirement_password\",\n                children: errors.password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"form_row\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  title: \"Bio: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TextareaInput, {\n                  rows: \"5\",\n                  name: \"bio\",\n                  placeholder: \"Tell us about you! Max length 500 characters.\",\n                  handleChange: this.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 33\n              }, this), errors.bio.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error requirement_bio\",\n                children: errors.bio\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                name: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: this.databaseErrorMessage()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["/Users/jennifertwist/server/html/2020-sept-DreamTeamSocial-ui/src/components/register/register.js"],"names":["React","Component","Link","Redirect","axios","Button","Header","Label","Input","TextareaInput","validUsernameRegex","RegExp","validEmailRegex","validPasswordRegex","validateForm","errors","valid","Object","values","forEach","val","length","Register","constructor","props","checkLoginStatus","method","withCredentials","url","then","response","data","catch","err","setState","databaseError","databaseMessage","handleChange","event","preventDefault","name","value","target","state","username","test","email","password","bio","handleSubmit","success","message","history","push","error","console","log","loggedInUser","componentDidMount","info","databaseErrorMessage","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './register.css';\nimport {Link, Redirect} from \"react-router-dom\";\nimport axios from \"axios\";\nimport Button from \"../button\";\nimport Header from \"../header\";\nimport Label from \"../label\";\nimport Input from \"../input\";\nimport TextareaInput from \"../textareaInput\";\n\nconst validUsernameRegex = RegExp(/^[a-zA-Z0-9-_]{8,20}$/);\nconst validEmailRegex =\n    RegExp(/^(([^<>()\\[\\].,;:\\s@\"]+(\\.[^<>()\\[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i);\nconst validPasswordRegex = RegExp(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/);\n\nconst validateForm = (errors) => {\n    let valid = true;\n    Object.values(errors).forEach(\n        // if we have an error string set valid to false\n        (val) => val.length > 0 && (valid = false)\n    );\n    return valid;\n}\n\n\n\nclass Register extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: null,\n            email: null,\n            password: null,\n            bio: null,\n            loggedInUser: false,\n            databaseError: false,\n            databaseMessage: '',\n            errors: {\n                username: '',\n                email: '',\n                password: '',\n                bio: '',\n            }\n        };\n    }\n\n    checkLoginStatus = async () => {\n        return axios({\n            method: \"GET\",\n            withCredentials: true,\n            url: \"http://localhost:3001/user/loggedIn\"\n        }).then( response => {\n            return response.data\n        }).catch( err => {\n            this.setState({databaseError: true, databaseMessage: \"Couldn't connect to database\"})\n        })\n    }\n\n    async componentDidMount() {\n        const response = await this.checkLoginStatus()\n        if (response.success) {\n            this.setState({loggedInUser: response.info.username});\n        } else {\n            this.setState({loggedInUser: false});\n        }\n    }\n\n    handleChange = (event) => {\n        event.preventDefault();\n        const { name, value } = event.target;\n        let errors = this.state.errors;\n\n        switch (name) {\n            case 'username':\n                errors.username =\n                    validUsernameRegex.test(value)\n                        ? ''\n                        : 'Username must be 8-20 characters long with no spaces! Letters, underscores and numbers allowed.';\n                break;\n            case 'email':\n                errors.email =\n                    validEmailRegex.test(value)\n                        ? ''\n                        : 'Email is not valid!';\n                break;\n            case 'password':\n                errors.password =\n                   validPasswordRegex.test(value)\n                        ? ''\n                        : 'Password must be at least 8 characters long, with at least 1 uppercase letter, 1 lower case, 1 special character & 1 number.';\n                break;\n            case 'bio':\n                errors.bio =\n                    value.length > 500\n                        ? 'Bio must be less than 500 characters long!'\n                        : '';\n                break;\n            default:\n                break;\n        }\n\n        this.setState({errors, [name]: value});\n\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        if (validateForm(this.state.errors)) {\n            const { username, password, email, bio} = this.state;\n            axios({\n                    method: \"POST\",\n                    data: {\n                        username: username,\n                        password: password,\n                        email: email,\n                        bio: bio\n                    },\n                    withCredentials: true,\n                    url: \"http://localhost:3001/user\",\n                })\n                .then(response => {\n                    if (!response.data.success) {\n                        //Handle if registration fails\n                        this.setState({databaseError: true, databaseMessage: response.data.message})\n                    } else {\n                        axios({\n                            method: \"POST\",\n                            data: {\n                                username: username,\n                                password: password,\n                            },\n                            withCredentials: true,\n                            url: \"http://localhost:3001/user/login\",\n                        }).then(response => {\n                                if(response.data.success) {\n                                    this.props.history.push('/profile/' + username);\n                                } else {\n                                    this.props.history.push('/');\n                                }\n                            })\n                    }\n                })\n                .catch((error) => {\n                    //sorry or servers are down please try again later\n                    console.log(error)\n                })\n        } else{\n            console.error('Invalid Form')\n        }\n    }\n\n    databaseErrorMessage() {\n        if(this.state.databaseError) {\n            return <p className='error'>{this.state.databaseMessage}</p>\n        }\n    }\n\n    render() {\n        const {errors} = this.state;\n\n        if(this.state.loggedInUser) {\n            return <Redirect to={'/profile/' + this.state.loggedInUser}/>\n        } else {\n            return (\n                <div className=\"main_container\">\n                    <div className=\"logo_box\">\n                        <img src=\"TILTime-logo.png\" alt=\"Logo\"/>\n                    </div>\n                        <div className='container'>\n                            <div className=\"link_button\">\n                                <Link to='/'>\n                                    <Button name='Login'/>\n                                </Link>\n                            </div>\n                        <form onSubmit={this.handleSubmit}>\n                            <Header title='Register'/>\n                            <ul className=\"form_wrapper\">\n                                <li className=\"form_row\">\n                                    <Label title=\"Choose Username: \" />\n                                    <Input type=\"text\" name=\"username\" handleChange={this.handleChange}/>\n                                </li>\n                                {errors.username.length > 0 &&\n                                <p className='error requirement_username'>{errors.username}</p>}\n                                <li className=\"form_row\">\n                                    <Label title=\"Email: \" />\n                                    <Input type=\"text\" name=\"email\" handleChange={this.handleChange}/>\n                                </li>\n                                {errors.email.length > 0 &&\n                                <p className='error requirement_email'>{errors.email}</p>}\n                                <li className=\"form_row\">\n                                    <Label title=\"Password: \" />\n                                    <input type=\"password\" name=\"password\" onChange={this.handleChange}/>\n                                </li>\n                                {errors.password.length > 0 &&\n                                <p className='error requirement_password'>{errors.password}</p>}\n                                <li className=\"form_row\">\n                                    <Label title=\"Bio: \" />\n                                    <TextareaInput rows=\"5\" name=\"bio\" placeholder=\"Tell us about you! Max length 500 characters.\" handleChange={this.handleChange}/>\n                                </li>\n                                {errors.bio.length > 0 &&\n                                <p className='error requirement_bio'>{errors.bio}</p>}\n                                <Button name=\"Submit\"/>\n                            </ul>\n                            <div>{this.databaseErrorMessage()}</div>\n                        </form>\n                    </div>\n                </div>\n            )\n        }\n    }\n\n}\nexport default Register;\n\n"]},"metadata":{},"sourceType":"module"}