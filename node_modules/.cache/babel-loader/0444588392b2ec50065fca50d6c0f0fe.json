{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jennifertwist/server/html/2020-sept-DreamTeamSocial-ui/src/components/login/login.js\";\nimport React, { Component } from 'react';\nimport './login.css';\nimport { Link, Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Button from \"../button\";\nimport Header from \"../header\";\nimport Label from \"../label\";\nimport Input from \"../input\";\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: ''\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const {\n        username,\n        password\n      } = this.state;\n      axios({\n        method: \"POST\",\n        data: {\n          username: username,\n          password: password\n        },\n        withCredentials: true,\n        url: \"http://localhost:3001/user/login\"\n      }) //This is probably not the best way to authenticate a user. A check on the status code would be better.\n      .then(response => {\n        console.log(response.data);\n\n        if (!response.data.success) {\n          console.log(response.data);\n        } else {\n          //Need to store the user data in local storage\n          Object.keys(response.data).forEach(item => {\n            localStorage.setItem(item, response.data.info[item]);\n          }); //This pushes you to the profile page on successful login.\n\n          this.props.history.push('/profile'); //This is how you store an array\n          // localStorage.setItem('array', JSON.stringify(['Hello', 'Super']))\n          // //This is how to retrieve array\n          // var storedNames = JSON.parse(localStorage.getItem('array'));\n          // console.log(response.data);\n        }\n      });\n    };\n  }\n\n  render() {\n    // Use this code to redirect based on if user is logged in.\n    const isAuthenticated = localStorage.getItem('isAuthenticated');\n    console.log(isAuthenticated);\n\n    if (isAuthenticated) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo_box\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"TILTime-logo.png\",\n            alt: \"Logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"link_button\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/register\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                name: \"Register\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 34\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Header, {\n              title: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"form_wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"form_row\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  title: \"Username:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 36\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"text\",\n                  name: \"username\",\n                  handleChange: this.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 36\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 32\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"form_row\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  title: \"Password:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"password\",\n                  name: \"password\",\n                  handleChange: this.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                name: \"Enter\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error_msg\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Your username or password was not recognised, please try again.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/jennifertwist/server/html/2020-sept-DreamTeamSocial-ui/src/components/login/login.js"],"names":["React","Component","Link","Redirect","axios","Button","Header","Label","Input","Login","constructor","props","state","username","password","handleChange","event","name","value","target","setState","handleSubmit","preventDefault","method","data","withCredentials","url","then","response","console","log","success","Object","keys","forEach","item","localStorage","setItem","info","history","push","render","isAuthenticated","getItem"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './login.css';\nimport {Link, Redirect} from \"react-router-dom\";\nimport axios from \"axios\";\nimport Button from \"../button\";\nimport Header from \"../header\";\nimport Label from \"../label\";\nimport Input from \"../input\";\nexport default class Login extends Component{\n\n    constructor(props) {\n        super(props);\n    }\n\n    state = {\n        username: '',\n        password: '',\n    }\n\n    handleChange  = (event) => {\n        const {name, value} = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    handleSubmit  = (event) => {\n        event.preventDefault();\n        const { username, password} = this.state\n        axios({\n            method: \"POST\",\n            data: {\n                username: username,\n                password: password,\n            },\n            withCredentials: true,\n            url: \"http://localhost:3001/user/login\",\n        })\n            //This is probably not the best way to authenticate a user. A check on the status code would be better.\n        .then(response => {\n            console.log(response.data)\n            if (!response.data.success) {\n                console.log(response.data)\n            } else {\n                //Need to store the user data in local storage\n                Object.keys(response.data).forEach((item) => {\n                    localStorage.setItem(item, response.data.info[item])\n                });\n                //This pushes you to the profile page on successful login.\n                this.props.history.push('/profile');\n                //This is how you store an array\n                // localStorage.setItem('array', JSON.stringify(['Hello', 'Super']))\n                // //This is how to retrieve array\n                // var storedNames = JSON.parse(localStorage.getItem('array'));\n                // console.log(response.data);\n            }\n        })\n    };\n    render() {\n        // Use this code to redirect based on if user is logged in.\n        const isAuthenticated = localStorage.getItem('isAuthenticated');\n console.log(isAuthenticated)\n        if(isAuthenticated) {\n            return <Redirect to='/profile'/>\n        } else {\n            return (\n                <div className=\"main_container\">\n                    <div className=\"logo_box\">\n                        <img src=\"TILTime-logo.png\" alt=\"Logo\" />\n                    </div>\n                    <div className='container'>\n                        <div className=\"link_button\">\n                            <Link to='/register'>\n                                 <Button name='Register'/>\n                            </Link>\n                        </div>\n                        <form onSubmit={this.handleSubmit}>\n                            <Header title='Login'/>\n                            <ul className=\"form_wrapper\">\n                               <li className=\"form_row\">\n                                   <Label title='Username:'/>\n                                   <Input type=\"text\" name=\"username\" handleChange={this.handleChange}/>\n                               </li>\n                                <li className=\"form_row\">\n                                    <Label title='Password:'/>\n                                    <Input type=\"password\" name=\"password\" handleChange={this.handleChange}/>\n                                </li>\n                                <Button name='Enter'/>\n                            </ul>\n                        </form>\n                            <div className=\"error_msg\">\n                                <p>Your username or password was not recognised, please try again.</p>\n                            </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}