{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jennifertwist/server/html/2020-sept-DreamTeamSocial-ui/src/components/login/login.js\";\nimport React, { Component } from 'react';\nimport '../../App.css';\nimport { Link, Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport img from \"./TILTime-logo.png\";\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: ''\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const {\n        username,\n        password\n      } = this.state;\n      axios({\n        method: \"POST\",\n        data: {\n          username: username,\n          password: password\n        },\n        withCredentials: true,\n        url: \"http://localhost:3001/login\"\n      }) //This is probably not the best way to authenticate a user. A check on the status code would be better.\n      .then(response => {\n        console.log(response.data);\n        const isAuthenticated = response.data.isAuthentiicated;\n\n        if (response.data === 'No User exists') {\n          console.log(response.data);\n        } else {\n          //Need to store the user data in local storage\n          Object.keys(response.data).forEach(item => {\n            localStorage.setItem(item, response.data[item]);\n          }); //This pushes you to the profile page on successful login.\n\n          this.props.history.push('/profile'); //This is how you store an array\n          // localStorage.setItem('array', JSON.stringify(['Hello', 'Super']))\n          // //This is how to retrieve array\n          // var storedNames = JSON.parse(localStorage.getItem('array'));\n          // console.log(response.data);\n        }\n      });\n    };\n  }\n\n  render() {\n    // Use this code to redirect based on if user is logged in.\n    const isAuthenticated = localStorage.getItem('isAuthenticated');\n\n    if (isAuthenticated) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/TILTime-logo.png\",\n          alt: \"Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"username\",\n            placeholder: \"username\",\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            placeholder: \"password\",\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/register\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/jennifertwist/server/html/2020-sept-DreamTeamSocial-ui/src/components/login/login.js"],"names":["React","Component","Link","Redirect","axios","img","Login","constructor","props","state","username","password","handleChange","event","name","value","target","setState","handleSubmit","preventDefault","method","data","withCredentials","url","then","response","console","log","isAuthenticated","isAuthentiicated","Object","keys","forEach","item","localStorage","setItem","history","push","render","getItem"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../../App.css';\nimport {Link, Redirect} from \"react-router-dom\";\nimport axios from \"axios\";\nimport img from \"./TILTime-logo.png\";\nexport default class Login extends Component{\n\n    constructor(props) {\n        super(props);\n    }\n\n    state = {\n        username: '',\n        password: '',\n    }\n\n    handleChange  = (event) => {\n        const {name, value} = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n    handleSubmit  = (event) => {\n        event.preventDefault();\n        const { username, password} = this.state\n        axios({\n            method: \"POST\",\n            data: {\n                username: username,\n                password: password,\n            },\n            withCredentials: true,\n            url: \"http://localhost:3001/login\",\n        })\n            //This is probably not the best way to authenticate a user. A check on the status code would be better.\n        .then(response => {\n            console.log(response.data)\n            const isAuthenticated = response.data.isAuthentiicated\n            if (response.data === 'No User exists') {\n                console.log(response.data)\n            } else {\n                //Need to store the user data in local storage\n                Object.keys(response.data).forEach((item) => {\n                    localStorage.setItem(item, response.data[item])\n                });\n                //This pushes you to the profile page on successful login.\n                this.props.history.push('/profile');\n                //This is how you store an array\n                // localStorage.setItem('array', JSON.stringify(['Hello', 'Super']))\n                // //This is how to retrieve array\n                // var storedNames = JSON.parse(localStorage.getItem('array'));\n                // console.log(response.data);\n            }\n        })\n    };\n    render() {\n        // Use this code to redirect based on if user is logged in.\n        const isAuthenticated = localStorage.getItem('isAuthenticated');\n\n        if(isAuthenticated) {\n            return <Redirect to='/profile'/>\n        } else {\n            return (\n                <div>\n                    <img src='/TILTime-logo.png' alt=\"Logo\" />\n                    <form onSubmit={this.handleSubmit}>\n                        <h1>Login</h1>\n                        <input type=\"text\" name=\"username\" placeholder='username' onChange={this.handleChange}/>\n                        <input type=\"password\" name=\"password\" placeholder='password' onChange={this.handleChange}/>\n                        <button>Submit</button>\n                    </form>\n                    <Link to='/register'>\n                        <h1>Register</h1>\n                    </Link>\n                </div>\n            )\n        }\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}